.PHONY: all clean install test

SUBDIRS = driver #test
all: ${SUBDIRS}
${SUBDIRS}: check-version
	${MAKE} -C $@

clean: deb-clean
	$(foreach dir,${SUBDIRS},${MAKE} -C ${dir} clean)

install:
	${MAKE} -C driver install

.PHONY: load reload unload debug-on debug-off
load:
	${MAKE} -C driver load
reload:
	${MAKE} -C driver reload
unload:
	${MAKE} -C driver unload
debug-on debug-off:
	${MAKE} -C driver $@

# ------------------------------------------------------------------------
# kio version file

KIO_VERSION_H = include/kio_version.h
ifeq ($(KERNELRELEASE),)
# for some reason on github, git describe --always --abbrev=8 didn't always work
KIO_GIT_REVISION=$(shell echo "$(git tag --sort=committerdate | tail -1)-r$(git rev-list --count HEAD)-g$(git rev-parse --short HEAD)")
check-version:
	@echo KIO_GIT_REVISION=${KIO_GIT_REVISION}
ifneq (${KIO_GIT_REVISION},)
	${Q}mkdir -p $(dir ${KIO_VERSION_H})
	${Q}if ! grep -q "KIO_GIT_REVISION.*\"${KIO_GIT_REVISION}\"" ${KIO_VERSION_H} ; then \
		( echo '// this file is generated by Makefile, do not edit' ; \
		  echo '#pragma once' ; \
		  echo '#define KIO_GIT_REVISION "${KIO_GIT_REVISION}"' \
		  ) > ${KIO_VERSION_H} ; \
	fi
endif
endif

# ------------------------------------------------------------------------
# debian dkms

.PHONY: deb deb-clean deb-path deb-install-source deb-install-scripts

USER = $(shell id -u -n)
SUDO = $(shell which sudo)

DKMS_NAME    = kio
DEB_NAME     = ${DKMS_NAME}-dkms
DEB_ARCH     = $(shell dpkg --print-architecture)
DEB_VERSION  = $(shell echo "${KIO_GIT_REVISION}" | sed -r -e 's/^v([0-9.-]*)(-g.*|)$$/\1/' )
DEB_REVISION = 1

DEB_PKG_NAME = ${DEB_NAME}_${DEB_VERSION}-${DEB_REVISION}_${DEB_ARCH}
DEB_BLD_DIR  = $(shell pwd)/build/deb
DEB_PKG_DIR  = ${DEB_BLD_DIR}/${DEB_PKG_NAME}
DEB_DKMS_DIR = ${DEB_PKG_DIR}/usr/src/${DKMS_NAME}-${DEB_VERSION}
DEB_PKG_FILE = ${DEB_PKG_DIR}.deb

DEB_CTL_SRC  = debian/control
DEB_CTL_DST  = ${DEB_PKG_DIR}/DEBIAN/control

DKMS_CONF_SRC = debian/dkms.conf.in
DKMS_CONF_DST = ${DEB_DKMS_DIR}/dkms.conf
${DKMS_CONF_DST}: ${DKMS_CONF_SRC} Makefile
	sed -r <$< >$@.tmp \
		-e "s/^PACKAGE_NAME=.*/PACKAGE_NAME=${DKMS_NAME}/" \
		-e "s/^PACKAGE_VERSION=.*/PACKAGE_VERSION=${DEB_VERSION}/"
	mv $@.tmp $@


deb: ${DEB_PKG_FILE}

DEB_SRC = $(wildcard driver/*.[ch] driver/Makefile driver/Kbuild)
DEB_INC = ${OUR_THIM_IMPORTS} ${KIO_VERSION_H}

deb-install-source: check-version
	install -m 755 -d          ${DEB_DKMS_DIR}
	install -m 644 ${DEB_SRC}  ${DEB_DKMS_DIR}
	install -m 755 -d          ${DEB_DKMS_DIR}
	install -m 644 ${DEB_INC}  ${DEB_DKMS_DIR}

DPKG_SCRIPTS = postinst prerm
deb-install-scripts: $(foreach x,${DPKG_SCRIPTS},debian/$x) Makefile
	for x in ${DPKG_SCRIPTS} ; do \
		sed -r -e "s/\{NAME\}/${DKMS_NAME}/g" \
		       -e "s/\{VERSION\}/${DEB_VERSION}/g" \
		       < debian/$$x > ${DEB_PKG_DIR}/DEBIAN/$$x ; \
		chmod 0755 ${DEB_PKG_DIR}/DEBIAN/$$x ; \
	done

${DEB_CTL_DST}: ${DEB_CTL_SRC} Makefile
	sed -r -e "s/^Package:.*/Package: ${DEB_NAME}/" \
	       -e "s/^Version:.*/Version: ${DEB_VERSION}/" \
		< $< > $@

deb-clean:
	rm -rf ${DEB_BLD_DIR}

deb-path:
	rm -rf ${DEB_PKG_DIR}
	mkdir -p ${DEB_PKG_DIR}/DEBIAN

${DEB_PKG_FILE}: deb-path
	# install module sources in packaging tree
	fakeroot ${MAKE} deb-install-source
	#
	# create the DEBIAN/control and dkms.conf files
	fakeroot ${MAKE} ${DEB_CTL_DST}
	fakeroot ${MAKE} ${DKMS_CONF_DST}
	#
	# add debian package scripts
	fakeroot ${MAKE} deb-install-scripts
	#
	# create the .deb package
	fakeroot dpkg-deb --build ${DEB_PKG_DIR}

deb-install: ${DEB_PKG_FILE}
	${SUDO} dpkg -i $<

